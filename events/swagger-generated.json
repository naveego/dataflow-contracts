{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "definitions": {
    "DataflowEvent": {
      "title": "DataflowEvent",
      "type": "object",
      "description": "The envelope for events on in the dataflow streams.",
      "required": [
        "id",
        "cid",
        "tid",
        "sid",
        "rid"
      ],
      "properties": {
        "id": {
          "title": "ID",
          "type": "string",
          "description": "A unique identifier for the event.",
          "minLength": 20
        },
        "tid": {
          "title": "TenantID",
          "type": "string",
          "description": "The ID of the tenant this event belongs to.",
          "minLength": 1
        },
        "sid": {
          "title": "SourceID",
          "type": "string",
          "description": "The NRN of the source that generated this event."
        },
        "jid": {
          "title": "JobID",
          "type": "string",
          "description": "The NRN of the job that generated this event."
        },
        "bid": {
          "title": "BatchID",
          "type": "string",
          "description": "The NRN of the batch (run of a job) that generated this event."
        },
        "rid": {
          "title": "RecordID",
          "type": "string",
          "description": "A value that uniquely represents the record or resource most relevent to the event."
        },
        "rids": {
          "title": "RecordIDs",
          "type": "array",
          "description": "The RID value for each event bundled into this event.",
          "items": {
            "type": "string"
          }
        },
        "cid": {
          "title": "CorrelationID",
          "type": "string",
          "description": "A value used to track the event's movement through the system and to assign causality."
        },
        "m": {
          "title": "Metadata",
          "type": "object",
          "description": "Metadata to be transferred with the event.",
          "additionalProperties": {
            "type": "object"
          }
        },
        "d": {
          "title": "Payload",
          "$ref": "#/definitions/DataflowEvent/definitions/Payload"
        },
        "trc": {
          "title": "Traces",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DataflowEvent/definitions/Trace"
          }
        }
      },
      "definitions": {
        "Payload": {
          "title": "Payload",
          "type": "object",
          "discriminator": {
            "propertyName": "typ"
          },
          "description": "The envelope for events on in the dataflow streams.",
          "required": [
            "typ"
          ],
          "properties": {
            "typ": {
              "title": "The type, used to discriminate between payloads.",
              "type": "string"
            },
            "m": {
              "title": "Metadata",
              "type": "object",
              "description": "Metadata defined as part of the payload, used when components need to add custom info to standard payloads."
            }
          },
          "$id": "https://naveego.com/payload.json"
        },
        "Trace": {
          "type": "object",
          "description": "A trace records stats for a step that an event has gone through.",
          "additionalProperties": false,
          "properties": {
            "n": {
              "title": "Step name",
              "type": "string",
              "description": "The name of the step."
            },
            "ts": {
              "title": "Timestamp",
              "type": "string",
              "description": "Timestamp indicating when the step started.",
              "format": "date-time"
            },
            "d": {
              "title": "Duration",
              "type": "number",
              "description": "The time it took to complete the step, in nanoseconds."
            }
          }
        },
        "Heartbeat": {
          "description": "A tracer used for monitoring latency and providing a keep-alive heartbeat for long-running jobs.",
          "additionalProperties": false,
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/heartbeat.json"
        },
        "DataPoint": {
          "title": "DataPoint",
          "type": "object",
          "description": "DataPoint is an object containing arbitrary data.",
          "properties": {
            "a": {
              "title": "Action",
              "type": "string",
              "enum": [
                "ins",
                "ups",
                "upd",
                "del"
              ]
            },
            "s": {
              "title": "ShapeID",
              "type": "string",
              "description": "The ShapeID@Version of the shape used to produce this data point."
            },
            "c": {
              "title": "ConnectionID",
              "type": "string",
              "description": "The ConnectionID@Version of the connection used to produce this data point."
            },
            "d": {
              "title": "Data",
              "type": "object",
              "description": "The data for this data point.",
              "additionalProperties": {
                "type": "object"
              }
            },
            "enr": {
              "title": "EnrichedData",
              "type": "object",
              "description": "Enriched data for this data point.",
              "additionalProperties": {
                "type": "object"
              }
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/data-point.json"
        },
        "BatchStart": {
          "title": "BatchStart",
          "type": "object",
          "description": "Start indicates a batch has started.",
          "additionalProperties": false,
          "properties": {
            "maxDurationSeconds": {
              "title": "MaxDurationSeconds",
              "type": "number",
              "description": "The maximum time this batch should take to complete, in seconds."
            },
            "count": {
              "title": "Expected count",
              "type": "number",
              "description": "Optional; the number of records expected in this job, if it can be predicted."
            },
            "rate": {
              "title": "Expected rate",
              "type": "number",
              "description": "Optional; the maximum number of milliseconds expected between data points or heartbeats. If the rate is provided the receiver will be able to detect timeouts more accurately."
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/batch-start.json"
        },
        "BatchEnd": {
          "title": "BatchEnd",
          "type": "object",
          "description": "End indicates a batch has ended.",
          "additionalProperties": false,
          "properties": {
            "count": {
              "title": "Count",
              "type": "number",
              "description": "The number of records the batch thinks it sent, so that receivers can detect data loss."
            },
            "reason": {
              "title": "Reason",
              "description": "Specifies the reason the job ended.",
              "enum": [
                "completed",
                "failed",
                "stopped"
              ]
            },
            "message": {
              "title": "Message",
              "type": "string",
              "description": "A message about why the job ended. Usually only relevent if the job failed."
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/batch-end.json"
        },
        "BadRecord": {
          "title": "BadRecord",
          "type": "object",
          "description": "BadRecord represents a record that had some problem at some step. The data point should be propegated but no step should attempt any further processing.",
          "properties": {
            "dataPoint": {
              "description": "The original data point, before something went wrong.",
              "$ref": "#/definitions/DataflowEvent/definitions/DataPoint"
            },
            "errorStep": {
              "type": "string",
              "description": "Something that identifies the step where the problem happend."
            },
            "error": {
              "type": "string"
            },
            "problems": {
              "type": "object",
              "description": "Problems that individual properties in the record had."
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/bad-record.json"
        },
        "ResourcePayload": {
          "title": "ResourcePayload",
          "type": "object",
          "description": "Payload for resource-specific events.",
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/shape-change-schema.json"
        },
        "ResourceCreated": {
          "title": "ResourceCreated",
          "type": "object",
          "description": "Emitted when a resource is created.",
          "properties": {
            "r": {
              "title": "Resource",
              "description": "The resource which was created.",
              "$ref": "#/definitions/Resource"
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/ResourcePayload"
            }
          ],
          "$id": "https://naveego.com/shape-change-schema.json"
        },
        "ResourceDeleted": {
          "title": "ResourceDeleted",
          "type": "object",
          "description": "Emitted when a resource is deleted.",
          "properties": {
            "r": {
              "title": "Resource",
              "description": "The resource which was deleted.",
              "$ref": "#/definitions/Resource"
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/ResourcePayload"
            }
          ],
          "$id": "https://naveego.com/shape-change-schema.json"
        },
        "ResourceUpdated": {
          "title": "ResourceUpdated",
          "type": "object",
          "description": "Emitted when a resource is updated.",
          "properties": {
            "b": {
              "title": "Before",
              "description": "The state of the resource before the change.",
              "$ref": "#/definitions/Resource"
            },
            "a": {
              "title": "After",
              "description": "The state of the resource after the change.",
              "$ref": "#/definitions/Resource"
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/ResourcePayload"
            }
          ],
          "$id": "https://naveego.com/shape-change-schema.json"
        },
        "ResourceDefinitions": {
          "definitions": {
            "MetabaseShapeResource": {
              "$schema": "http://json-schema.org/draft-04/schema#",
              "title": "MetabaseShapeResource",
              "definitions": {
                "ShapePropertyModel": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "id": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "name": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "description": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "type": {
                      "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/PropertyType"
                    },
                    "isUnique": {
                      "type": "boolean"
                    },
                    "security": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/ShapePropertySecurityModel"
                        }
                      ]
                    },
                    "isNullable": {
                      "type": "boolean"
                    }
                  }
                },
                "PropertyType": {
                  "type": "string",
                  "description": "",
                  "x-enumNames": [
                    "String",
                    "Bool",
                    "Integer",
                    "Float",
                    "Decimal",
                    "Date",
                    "Time",
                    "Datetime",
                    "Text",
                    "Blob",
                    "Json"
                  ],
                  "enum": [
                    "string",
                    "bool",
                    "integer",
                    "float",
                    "decimal",
                    "date",
                    "time",
                    "datetime",
                    "text",
                    "blob",
                    "json"
                  ]
                },
                "ShapePropertySecurityModel": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "algorithm": {
                      "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/SecurityAlgorithm"
                    },
                    "keyStorage": {
                      "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/SecurityKeyStorage"
                    },
                    "key": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  }
                },
                "SecurityAlgorithm": {
                  "type": "string",
                  "description": "",
                  "x-enumNames": [
                    "None",
                    "Aesgcm",
                    "Sha256Hmac"
                  ],
                  "enum": [
                    "none",
                    "aesgcm",
                    "sha256Hmac"
                  ]
                },
                "SecurityKeyStorage": {
                  "type": "string",
                  "description": "",
                  "x-enumNames": [
                    "Vault",
                    "File"
                  ],
                  "enum": [
                    "vault",
                    "file"
                  ]
                },
                "MatchRuleModel": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "shapeId",
                    "mcl",
                    "grouping"
                  ],
                  "properties": {
                    "shapeId": {
                      "type": "string",
                      "minLength": 1
                    },
                    "mcl": {
                      "type": "number",
                      "format": "decimal"
                    },
                    "grouping": {
                      "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/TypeAndSettingsModel"
                    }
                  }
                },
                "TypeAndSettingsModel": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "type"
                  ],
                  "properties": {
                    "type": {
                      "minLength": 1,
                      "oneOf": [
                        {
                          "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/MatchRuleType"
                        }
                      ]
                    },
                    "settings": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "MatchRuleType": {
                  "type": "string",
                  "description": "",
                  "x-enumNames": [
                    "Unknown",
                    "Exact"
                  ],
                  "enum": [
                    "unknown",
                    "exact"
                  ]
                },
                "MergeRuleModel": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "properties": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "additionalProperties": {
                        "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/PropertyMergeRule"
                      }
                    }
                  }
                },
                "PropertyMergeRule": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "propertyId": {
                      "type": [
                        "null",
                        "string"
                      ]
                    },
                    "connections": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "allOf": [
                {
                  "$ref": "#/definitions/Resource"
                },
                {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "properties": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/ShapePropertyModel"
                      }
                    },
                    "labels": {
                      "type": [
                        "null",
                        "object"
                      ],
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "isMdmShape": {
                      "type": "boolean"
                    },
                    "matchRule": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/MatchRuleModel"
                        }
                      ]
                    },
                    "mergeRule": {
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "$ref": "#/definitions/DataflowEvent/definitions/ResourceDefinitions/definitions/MetabaseShapeResource/definitions/MergeRuleModel"
                        }
                      ]
                    },
                    "copiedFromSchemaId": {
                      "type": [
                        "null",
                        "string"
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "ResourceStatusPayload": {
          "title": "ResourceStatusPayload",
          "type": "object",
          "description": "Payload for resource-specific status events.",
          "properties": {
            "id": {
              "title": "ID",
              "type": "string",
              "description": "The ID of the resource this status belongs to."
            },
            "status": {
              "$ref": "#/definitions/ResourceStatus"
            }
          },
          "allOf": [
            {
              "$ref": "#/definitions/DataflowEvent/definitions/Payload"
            }
          ],
          "$id": "https://naveego.com/resource-status-payload.json"
        },
        "ResourceStatusDefinitions": {},
        "MatchGroup": {
          "$schema": "http://json-schema.org/draft-04/schema",
          "title": "MatchGroup",
          "type": "object",
          "discriminator": {
            "propertyName": "typ"
          },
          "description": "A representation of a match group provided by some microservice.",
          "required": [
            "typ",
            "id",
            "ruleId",
            "matchData",
            "dataPoints"
          ],
          "properties": {
            "typ": {
              "title": "Type",
              "type": "string",
              "description": "The type, used to discriminate between payloads."
            },
            "id": {
              "title": "Id",
              "type": "string"
            },
            "ruleId": {
              "title": "RuleId",
              "type": "string"
            },
            "matchData": {
              "title": "MatchData",
              "type": "string"
            },
            "dataPoints": {
              "title": "DataPoints",
              "type": "array",
              "items": {
                "$ref": "#/definitions/DataflowEvent/definitions/DataPoint"
              }
            }
          },
          "$id": "https://naveego.com/match-group.json"
        }
      }
    },
    "Resource": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "Resource",
      "type": "object",
      "discriminator": {
        "propertyName": "typ"
      },
      "description": "A representation of a resource provided by some microservice.",
      "required": [
        "typ",
        "id",
        "version",
        "name"
      ],
      "properties": {
        "typ": {
          "title": "Type",
          "type": "string",
          "description": "The type, used to discriminate between payloads."
        },
        "id": {
          "title": "Id",
          "type": "string"
        },
        "nrn": {
          "title": "Nrn",
          "type": "string",
          "description": "The Naveego Resource Name of the resource. Format is \"nrn:{domain}:[tenant]:{microservice}:{type}:{id}[@version]\"."
        },
        "name": {
          "title": "Name",
          "type": "string",
          "description": "The display name of the resource."
        },
        "version": {
          "title": "Version",
          "type": "number",
          "description": "The version of the resource."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "createdBy": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time"
        },
        "deletedBy": {
          "type": "string"
        }
      },
      "$id": "https://naveego.com/resource.json"
    },
    "ResourceStatus": {
      "$schema": "http://json-schema.org/draft-04/schema",
      "title": "ResourceStatus",
      "type": "object",
      "discriminator": {
        "propertyName": "typ"
      },
      "description": "A representation of the status of a resource provided by some microservice.",
      "required": [
        "typ"
      ],
      "properties": {
        "typ": {
          "title": "Type",
          "type": "string",
          "description": "The type, used to discriminate between payloads."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedBy": {
          "type": "string"
        }
      },
      "$id": "https://naveego.com/status.json"
    }
  },
  "swagger": "2.0",
  "info": {
    "title": "Swagger for Dataflow Events",
    "version": "1.0.0",
    "description": "This is a swagger for dataflow events. There's no actual API for this, it's just to help with client generation and documentation."
  },
  "host": "kafka:9092",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{tenant}/go-between/ingestion": {
      "post": {
        "operationId": "sync",
        "consumes": [
          "application/json"
        ],
        "description": "Expects events with payloads including DataPoint, BatchStart, BatchEnd, Heartbeat, and BadRecord.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        }
      }
    },
    "/{tenant}/matching/groups": {
      "post": {
        "operationId": "matchingGroups",
        "consumes": [
          "application/json"
        ],
        "description": "Expects events with a Group payload.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        }
      }
    },
    "/{tenant}/mdm/compositerecords": {
      "post": {
        "operationId": "mdmCompositeRecords",
        "consumes": [
          "application/json"
        ],
        "description": "Expects events with a CompositeRecord payload.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "type": "string",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        }
      }
    },
    "/{tenant}/metabase/{resource}/changes": {
      "post": {
        "operationId": "metabaseResourceChanges",
        "consumes": [
          "application/json"
        ],
        "description": "Expects events with a ResourcePayload payload: ResourceUpdated, ResourceCreated, or ResourceDeleted.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "tenant",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "resource",
            "required": true,
            "description": "The type of the resource.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/DataflowEvent"
            }
          }
        }
      }
    }
  }
}