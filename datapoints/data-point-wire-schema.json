{
  "$id": "https://naveego.com/data-point-wire-schema.json",
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "DataPointWire",
  "type": "object",
  "description":
    "The wire format for data points. This format prioritizes small size.",
  "properties": {
    "id": {
      "type": "string",
      "title": "ID",
      "description":
        "The ID of the data point, which can be decomposed into various IDs. The ID format is 'tenantID:sourceID:shapeID:jobID:recordID:correlationID'. The 'correlationID' component is an xid for this specific data point, which contains an encoded timestamp."
    },
    "type": {
      "title": "Type",
      "description": "The type of the 'data' payload.",
      "enum": ["stt", "end", "ins", "upd", "ups", "del", "hbt", "bad"]
    },
    "data": {
      "title": "Data",
      "description":
        "The actual data payload of this data point. May be a record or one of the alternative types, based on the 'type' field.",
      "oneOf": [
        { "$ref": "#/definitions/Record" },
        { "$ref": "#/definitions/BadRecord" },
        { "$ref": "#/definitions/Start" },
        { "$ref": "#/definitions/End" },
        { "$ref": "#/definitions/Heartbeat" }
      ]
    },
    "trc": {
      "title": "Trace",
      "description":
        "Trace information used for monitoring latency. This will only be populated on a fraction of data points.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Trace"
      }
    }
  },
  "required": ["id", "type"],
  "definitions": {
    "Record": {
      "type": "object",
      "description":
        "Record is an object containing arbitrary data. It is used when the type is 'ins', 'ups', or 'del'",
      "additionalProperties": true
    },
    "BadRecord": {
      "type": "object",
      "description":
        "BadRecord represents a record that had some problem at some step. The data point should be propegated but no step should attempt any further processing.",
      "properties": {
        "originalType": {
          "description": "The original type, before something went wrong.",
          "enum": ["ins", "upd", "ups"]
        },
        "originalRecord": {
          "description": "The original record that was emitted.",
          "$ref": "#/definitions/Record"
        },
        "errorStep": {
          "type": "string",
          "description":
            "Something that identifies the step where the problem happend."
        },
        "error": {
          "type": "string"
        },
        "problems": {
          "description":
            "Problems that individual properties in the record had.",
          "$ref": "#/definitions/Record"
        }
      },
      "additionalProperties": false
    },
    "Trace": {
      "type": "object",
      "description":
        "A trace records stats for a step that a data point has gone through.",
      "properties": {
        "n": {
          "title": "Step name",
          "type": "string",
          "description": "The name of the step."
        },
        "ts": {
          "title": "Timestamp",
          "type": "string",
          "format": "date-time",
          "description": "Timestamp indicating when the step started."
        },
        "d": {
          "type": "number",
          "title": "Duration",
          "description":
            "The time it took to complete the step, in nanoseconds."
        }
      }
    },
    "Start": {
      "type": "object",
      "description":
        "Start indicates a job has started. It is associated with the type 'stt'.",
      "additionalProperties": false,
      "properties": {
        "count": {
          "type": "number",
          "title": "Expected count",
          "description":
            "Optional; the number of records expected in this job, if it can be predicted."
        },
        "rate": {
          "type": "number",
          "title": "Expected rate",
          "description":
            "Optional; the maximum number of milliseconds expected between data points or heartbeats. If the rate is provided the receiver will be able to detect timeouts more accurately."
        },
        "willNotEnd": {
          "type": "boolean",
          "title": "Will not end",
          "description":
            "If true, this job is expected to run until it is stopped. Timeout monitoring may still be applied if 'rate' is set."
        }
      }
    },
    "End": {
      "type": "object",
      "description":
        "End indicates a job has ended. It is associated with the type 'end'.",
      "additionalProperties": false,
      "properties": {
        "count": {
          "type": "number",
          "title": "Count",
          "description":
            "The number of records the job thinks it sent, so that receivers can detect data loss."
        },
        "reason": {
          "enum": ["completed", "failed", "stopped"],
          "title": "Reason",
          "description": "Specifies the reason the job ended."
        },
        "message": {
          "type": "string",
          "title": "Message",
          "description":
            "A message about why the job ended. Usually only relevent if the job failed."
        }
      }
    },
    "Heartbeat": {
      "type": "object",
      "additionalProperties": false,
      "description":
        "A tracer used for monitoring latency and providing a keep-alive heartbeat for long-running jobs.",
      "properties": {}
    }
  }
}
